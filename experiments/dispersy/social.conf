
experiment_name = "dispersy_social"
#remote_workspace_dir = '/var/scratch/emilon/gumby'

#ead_nodes = 'emilon@fs3.das4.tudelft.nl',

experiment_server_cmd = 'experiment_server.py'

local_setup_cmd = 'tribler_experiment_setup.sh'

tracker_cmd = 'run_tracker.sh'
TRACKER_PORT = __unique_port__

local_instance_cmd = 'das4_reserve_and_run.sh'

post_process_cmd = 'post_process_dispersy_experiment.sh'

#Run python in optimized mode?
PYTHONOPTIMIZE = yup

# The following options are used by das4_reserve_and_run.sh

# How many nodes do we want? (seconds)
das4_node_amount = 40

# Kill the processes if they don't die after this many seconds
das4_node_timeout = 600

# For how long do we want the node reservation? (seconds)
das4_reserve_duration = 800

# How many processes do we want to spawn on each reserved node?
das4_processes_per_node = 101

# We need to manually set this on the das4 as dispersy will get really confused otherwise
# HEAD_IP = 10.149.3.254
HEAD_IP = 10.149.0.254

# What command do we want to run?
das4_node_command = "social_client.py"

messages_to_plot= 'text'

# The following options are used by the sync server

# Amount of subscribers to wait for before starting the experiment
sync_subscribers_amount = 4040

# Delay between sending the experiment info and the start signal
sync_experiment_start_delay = 1

# Port to be used to listen for incoming subscribers
sync_port = __unique_port__
